// Declate class page that has div as prototype
// Define type, types must be static so, we creates its impreative way. Imperative (compile deduced) types are written in camelCase
// Types can have base types
PageSize @extends Size<mm>{width height} {
    A4: 210 x 297
    A5: 148 x 210
    A6: 105 x 148
    A7: 74 x 105
}


// Creating class based on Node also create node, we can say this respectily
// Generaly, if you use declarating instead of setting compilator will optimise it, so with fields it is defuault attempt
Page @extends Div{
    // We are inherence this field from Div
    background: red
    
    // Add new field format, which accepting. We can use same name for type and variable name, becouse there are diffrent storages. Set default to A4
    // A4 bases on relative unit, so make it reactive
    PageSize size: A4

    // We are now flex box column 
    display: flex column

    // Create slot, slots are places, where we can later put some content. There are block fields
    // slot is simply Node type of field
    Div footer{
        // You can position this element, ru is relative unit, we can define how it will be calculated, ru can change in future, so make it reactive
        height: 32ru
    }
}

